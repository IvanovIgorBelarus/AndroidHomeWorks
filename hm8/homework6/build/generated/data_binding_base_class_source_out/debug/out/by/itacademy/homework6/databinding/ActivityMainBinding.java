// Generated by view binder compiler. Do not edit!
package by.itacademy.homework6.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import by.itacademy.homework6.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addFile;

  @NonNull
  public final ConstraintLayout mainActivityConstrain;

  @NonNull
  public final RecyclerView recycler;

  @NonNull
  public final Button settings;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button addFile,
      @NonNull ConstraintLayout mainActivityConstrain, @NonNull RecyclerView recycler,
      @NonNull Button settings) {
    this.rootView = rootView;
    this.addFile = addFile;
    this.mainActivityConstrain = mainActivityConstrain;
    this.recycler = recycler;
    this.settings = settings;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addFile;
      Button addFile = rootView.findViewById(id);
      if (addFile == null) {
        break missingId;
      }

      ConstraintLayout mainActivityConstrain = (ConstraintLayout) rootView;

      id = R.id.recycler;
      RecyclerView recycler = rootView.findViewById(id);
      if (recycler == null) {
        break missingId;
      }

      id = R.id.settings;
      Button settings = rootView.findViewById(id);
      if (settings == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, addFile, mainActivityConstrain,
          recycler, settings);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
